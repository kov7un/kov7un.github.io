! function(ee) {
    "use strict";

    function s(X, e) {
        var Y = (this.$el = X).find(".minimog-grid");
        this._isotopeOptions = {
            itemSelector: ".grid-item",
            percentPosition: !0,
            transitionDuration: 0,
            packery: {
                columnWidth: ".grid-sizer"
            },
            fitRows: {
                gutter: 10
            }
        }, this.triggerMethod = (e, t) => {
            "function" == typeof this[e] && this[e](t)
        }, this.init = function() {
            var e, t, a = this,
                i = X.data("grid");
            0 < Y.length && i && void 0 !== i.type ? ($minimog.isRTL && (a._isotopeOptions.originLeft = !1), "masonry" === i.type || "metro" === i.type ? a._isotopeOptions.layoutMode = "packery" : a._isotopeOptions.layoutMode = "fitRows", ee.fn.imagesLoaded ? Y.imagesLoaded(function() {
                a.calculateMasonrySize()
            }) : a.calculateMasonrySize(), ee.fn.laziestloader && Y.find(".ll-image").on("loaded", function(e) {
                clearTimeout(t), t = setTimeout(function() {
                    a.calculateMasonrySize()
                }, 100)
            }), Y.one("arrangeComplete", function() {
                a.handlerEntranceAnimation()
            }), ee(window).on("resize", function() {
                a.calculateMasonrySize(), clearTimeout(e), e = setTimeout(function() {
                    a.calculateMasonrySize()
                }, 500)
            })) : (Y.addClass("loaded"), a.handlerEntranceAnimation()), X.on("MinimogQueryEnd", function(e, t, i) {
                a.update(i)
            })
        }, this.update = function(e) {
            var t, i = this,
                a = X.data("grid");
            ee.fn.laziestloader && 0 < (t = e.find(".ll-image")).length && t.laziestloader({}, function() {
                ee(this).unwrap(".minimog-lazy-image")
            }).trigger("laziestloader"), 0 < Y.length && a && void 0 !== a.type ? (Y.isotope().append(e).isotope("reloadItems", e), ee.fn.imagesLoaded ? Y.imagesLoaded().always(function() {
                e.addClass("animate"), i.calculateMasonrySize()
            }) : (e.addClass("animate"), i.calculateMasonrySize())) : (Y.append(e), ee.fn.imagesLoaded ? Y.imagesLoaded().always(function() {
                e.addClass("animate")
            }) : e.addClass("animate"))
        }, this.updateLayout = function(e = {}) {
            this.disableColumnChange = !0 === e.disableColumnChange, this.calculateMasonrySize(e)
        }, this.parseNumberValue = function(e = "", t = "") {
            return void 0 === e || "" === e || isNaN(e) ? t : parseInt(e)
        }, this.calculateMasonrySize = function(e = {}) {
            var i = this,
                t = window.innerWidth,
                a = Y[0].getBoundingClientRect().width,
                s = X.data("grid"),
                n = this.parseNumberValue(s.gutter, 0),
                o = this.parseNumberValue(s.gutterWideScreen, n),
                r = this.parseNumberValue(s.gutterLaptop, n),
                u = this.parseNumberValue(s.gutterTabletExtra, r),
                l = this.parseNumberValue(s.gutterTablet, u),
                c = this.parseNumberValue(s.gutterMobileExtra, l),
                _ = this.parseNumberValue(s.gutterMobile, c),
                m = this.parseNumberValue(s.columns, 1),
                g = this.parseNumberValue(s.columnsWideScreen, m),
                h = this.parseNumberValue(s.columnsLaptop, m),
                d = this.parseNumberValue(s.columnsTabletExtra, h),
                p = this.parseNumberValue(s.columnsTablet, d),
                v = this.parseNumberValue(s.columnsMobileExtra, p),
                O = this.parseNumberValue(s.columnsMobile, v),
                C = this.parseNumberValue(s.zigzagHeight, 0),
                b = this.parseNumberValue(s.zigzagHeightWideScreen, C),
                f = this.parseNumberValue(s.zigzagHeightLaptop, C),
                R = this.parseNumberValue(s.zigzagHeightTabletExtra, f),
                W = this.parseNumberValue(s.zigzagHeightTablet, R),
                k = this.parseNumberValue(s.zigzagHeightMobileExtra, W),
                B = this.parseNumberValue(s.zigzagHeightMobile, k),
                F = void 0 !== s.zigzagReversed && 1 === s.zigzagReversed,
                z = 0,
                y = this.parseNumberValue(s.columnAlternating, 0),
                Q = this.parseNumberValue(s.columnAlternatingWideScreen, y),
                $ = this.parseNumberValue(s.columnAlternatingLaptop, y),
                j = this.parseNumberValue(s.columnAlternatingTabletExtra, $),
                D = this.parseNumberValue(s.columnAlternatingTablet, j),
                P = this.parseNumberValue(s.columnAlternatingMobileExtra, D),
                q = this.parseNumberValue(s.columnAlternatingMobile, P),
                N = 1600,
                V = 1200,
                M = 992,
                x = 768,
                J = 576,
                G = 360,
                A = ("undefined" != typeof elementorFrontendConfig && (A = elementorFrontendConfig.responsive.breakpoints, N = this.parseNumberValue(A.widescreen.value, N), V = this.parseNumberValue(A.laptop.value, V), M = this.parseNumberValue(A.tablet_extra.value, M), x = this.parseNumberValue(A.tablet.value, x), J = this.parseNumberValue(A.mobile_extra.value, G), G = this.parseNumberValue(A.mobile.value, G)), i.activeColumns);
            i.disableColumnChange || (N <= t ? (i.activeColumns = g, i.activeGutter = o, i.activeZigzagHeight = b, i.activeAlternatingColumns = Q) : V < t ? (i.activeColumns = m, i.activeGutter = n, i.activeZigzagHeight = C, i.activeAlternatingColumns = y) : M < t ? (i.activeColumns = h, i.activeGutter = r, i.activeZigzagHeight = f, i.activeAlternatingColumns = $) : x < t ? (i.activeColumns = d, i.activeGutter = u, i.activeZigzagHeight = R, i.activeAlternatingColumns = j) : J < t ? (i.activeColumns = p, i.activeGutter = l, i.activeZigzagHeight = W, i.activeAlternatingColumns = D) : G < t ? (i.activeColumns = v, i.activeGutter = c, i.activeZigzagHeight = k, i.activeAlternatingColumns = P) : (i.activeColumns = O, i.activeGutter = _, i.activeZigzagHeight = B, i.activeAlternatingColumns = q)), void 0 !== e.columns && (i.activeColumns = e.columns), A !== i.activeColumns && ee(document.body).trigger("MinimogGridLayoutColumnsChange", [X, A, i.activeColumns]), X.attr("data-active-columns", i.activeColumns);
            var w = (a - (i.activeColumns - 1) * i.activeGutter) / i.activeColumns,
                K = w = Math.floor(w),
                N = (1 < i.activeColumns && (K = 2 * w + i.activeGutter), w * i.activeColumns + i.activeGutter * (i.activeColumns - 1)),
                T = (X.css("--grid-real-width", N + "px"), Y.children(".grid-sizer").css({
                    width: w + "px"
                }), 0),
                H = 0,
                L = 0,
                S = 0,
                E = !1,
                g = 1,
                I = (s.ratio && (g = s.ratio, E = !0), E && (T = w * g, T = Math.floor(T), 1 < i.activeColumns ? (H = 2 * T + i.activeGutter, S = parseInt(1.3 * T), L = H - i.activeGutter - S) : H = L = S = T), 0),
                o = i.activeAlternatingColumns < 0,
                b = o ? i.activeColumns - 1 : i.activeColumns + 1,
                U = i.activeColumns + b,
                Z = !1;
            i.activeAlternatingColumns && (z = o ? (a - (b - 1) * i.activeGutter) / b : (a - i.activeColumns * i.activeGutter) / (i.activeColumns + 1), z = Math.floor(z)), Y.children(".grid-item").each(function(e) {
                var t = ee(this);
                ++I > i.activeColumns && (Z = !0), 0 < i.activeZigzagHeight && 1 < i.activeColumns && e + 1 <= i.activeColumns ? !1 == F ? e % 2 == 0 ? t.css({
                    marginTop: i.activeZigzagHeight + "px"
                }) : t.css({
                    marginTop: "0px"
                }) : e % 2 != 0 ? t.css({
                    marginTop: i.activeZigzagHeight + "px"
                }) : t.css({
                    marginTop: "0px"
                }) : t.css({
                    marginTop: "0px"
                }), i.activeAlternatingColumns && Z ? t.css({
                    width: z + "px",
                    height: "auto"
                }) : 2 === t.data("width") ? t.css({
                    width: K + "px",
                    height: "auto"
                }) : t.css({
                    width: w + "px",
                    height: "auto"
                }), "grid" === s.type && t.css({
                    marginBottom: i.activeGutter + "px"
                }), E && (e = t.hasClass("grid-item-height") ? t : t.find(".grid-item-height"), 2 === t.data("height") ? e.css({
                    height: H + "px"
                }) : 1.3 === t.data("height") ? e.css({
                    height: S + "px"
                }) : .7 === t.data("height") ? e.css({
                    height: L + "px"
                }) : e.css({
                    height: T + "px"
                })), Z = !1, I % U == 0 && (I = 0)
            }), i._isotopeOptions && (Y.addClass("loaded"), i._isotopeOptions.packery.gutter = i.activeGutter, i._isotopeOptions.fitRows.gutter = i.activeGutter, Y.isotope(i._isotopeOptions)), "grid" === s.type && Y.children(".grid-item").matchHeight(), setTimeout(function() {
                Y.isotope("layout"), Y.hasClass("has-animation") && Y.children(".grid-item").addClass("animate"), X.trigger("MinimogGridLayoutResized")
            }, 250)
        }, this.handlerEntranceAnimation = function() {
            Y.hasClass("has-animation") && Y.find(".grid-item").elementorWaypoint(function() {
                var e = this.element || this;
                ee(e).addClass("animate")
            }, {
                offset: "90%",
                triggerOnce: !0
            })
        }, this.init()
    }
    var e, t;
    "undefined" != typeof Isotope && (e = Isotope.Item.prototype.reveal, t = Isotope.Item.prototype.hide, Isotope.Item.prototype.reveal = function() {
        e.apply(this, arguments), ee(this.element).removeClass("isotope-hidden")
    }, Isotope.Item.prototype.hide = function() {
        t.apply(this, arguments), ee(this.element).addClass("isotope-hidden")
    });
    const n = "minimogGridLayout";
    ee.fn.extend({
        MinimogGridLayout: function(i, a) {
            return this.length ? "options" === i ? ee.data(this.get(0), n).options() : this.each(function() {
                var e = ee(this);
                let t = ee.data(this, n);
                t ? t.triggerMethod(i, a) : (t = new s(e), ee.data(this, n, t))
            }) : this
        }
    })
}(jQuery);
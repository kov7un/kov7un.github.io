! function(u) {
    "use strict";
    var f = u("body"),
        p = window.minimog.Helpers;

    function g() {
        var o, t = u(".cart-data-info").first();
        t.length <= 0 || !u.fn.MinimogCountdownTimer || (o = t.data("value"), u(".cart-countdown-timer").each(function() {
            var t = u(this),
                e = t.find(".timer"),
                a = t.data("countdown"),
                n = Date.now(),
                n = {
                    startTime: n,
                    endTime: n + 60 * a.length * 1e3,
                    addZeroPrefix: !0,
                    loop: a.loop,
                    callback: () => {
                        t.find(".cart-countdown-message").text(a.expired_message)
                    }
                };
            if (o.count <= 0) return e.MinimogCountdownTimer(n), e.MinimogCountdownTimer("clear"), !0;
            e.MinimogCountdownTimer(n)
        }))
    }
    u(document).ready(function() {
        function e(e, a) {
            var t = {
                action: "minimog_update_product_quantity",
                cart_item_key: e,
                cart_item_qty: a,
                security: $minimog.nonce
            };
            u.ajax({
                url: $minimog.ajaxurl,
                type: "POST",
                cache: !1,
                dataType: "json",
                data: t,
                success: function(t) {
                    u(document.body).trigger("wc_fragment_refresh"), u(document.body).trigger("minimog_update_qty", [e, a])
                },
                beforeSend: function() {
                    r()
                },
                complete: function() {}
            })
        }

        function o() {
            p.setBodyOverflow(), f.addClass(m), u.fn.perfectScrollbar && !p.isHandheld() && setTimeout(function() {
                l.find(".fly-cart-wrap").perfectScrollbar()
            }, 100), p.handleLazyImages(l), t(), l.hasClass("opened") || (r(), u(document.body).trigger("minimog_fly_cart_first_open")), l.addClass("opened")
        }

        function a() {
            p.unsetBodyOverflow(), f.removeClass(m)
        }

        function n() {
            return !!f.hasClass(m)
        }

        function i() {
            l.find(".fly-cart-addon-modal").removeClass("open"), l.removeClass("modal-open")
        }

        function t() {
            var t = l.offset().top,
                e = l.find(".fly-cart-header"),
                a = l.find(".fly-cart-body"),
                n = l.find(".fly-cart-footer"),
                e = window.innerHeight - e.outerHeight() - n.outerHeight() - 20 - t,
                e = Math.max(e, 400);
            a.outerHeight(e), u.fn.perfectScrollbar && !p.isHandheld() && a.perfectScrollbar({
                wheelPropagation: !0
            })
        }

        function r() {
            l.find(".fly-cart-messages").slideUp(300, function() {
                l.find(".fly-cart-messages").empty()
            }), l.removeClass("loaded").addClass("loading")
        }

        function c() {
            l.removeClass("loading").addClass("loaded")
        }

        function d() {
            var t = u(".cart-data-info").first();
            0 < t.length && (t.data("value").count <= 0 ? f.addClass("cart-is-empty") : f.removeClass("cart-is-empty")), u(".cart-goal-percent").each(function() {
                var t = u(this).closest(".cart-goal"),
                    e = parseFloat(u(this).val()),
                    a = t.find(".cart-goal-progress .progress-bar");
                setTimeout(function() {
                    a.css({
                        width: e + "%"
                    }), e < 100 ? t.removeClass("cart-goal-done shakeY") : t.addClass("cart-goal-done shakeY")
                }, 300)
            })
        }
        var s, l, m;
        l = u("#popup-fly-cart"), m = "popup-fly-cart-opened", u(document.body).on("click", ".mini-cart__button", function(t) {
            0 < l.length && (t.preventDefault(), o())
        }), f.on("added_to_cart", function(t, e, a, n) {
            0 < l.length && o()
        }), u("#btn-close-fly-cart").on("click", function(t) {
            t.preventDefault(), a()
        }), l.on("click", function(t) {
            t.target === this && a()
        }), u(document).on("wc_fragments_loaded wc_fragments_refreshed", function() {
            c(), d(), f.hasClass(m) && (p.handleLazyImages(l), t())
        }), u(document).on("wc_fragments_loaded wc_fragments_refreshed", g), u(document).on("click", ".fly-cart-addon-modal-toggle", function(t) {
            t.preventDefault();
            var t = u(this).data("target"),
                e = u(t);
            0 < e.length && (t = e.data("minimog-template"), !e.hasClass("template-loaded") && t ? u.ajax({
                url: $minimog.ajaxurl,
                type: "GET",
                data: {
                    action: "minimog_template_lazyload",
                    template: t,
                    context: "wc_cart"
                },
                dataType: "json",
                cache: !0,
                success: function(t) {
                    t.success && (e.html(t.data.template), e.hasClass("modal-shipping-calculator") && u(document.body).trigger("country_to_state_changed"), l.addClass("modal-open"), e.addClass("open"), e.addClass("template-loaded"))
                },
                beforeSend: function() {
                    r()
                },
                complete: function() {
                    c()
                }
            }) : (l.addClass("modal-open"), e.addClass("open")))
        }), l.on("click", ".btn-close-fly-cart-modal", function(t) {
            t.preventDefault(), i()
        }), l.on("click", ".js-remove-from-cart", function(t) {
            t.preventDefault();
            var e = u(this);
            u.ajax({
                type: "POST",
                url: $minimogWoo.wc_ajax_url.toString().replace("%%endpoint%%", "remove_from_cart"),
                data: {
                    cart_item_key: e.data("cart_item_key")
                },
                dataType: "json",
                beforeSend: function() {
                    r()
                },
                success: function(t) {
                    t && t.fragments ? (u(document.body).trigger("removed_from_cart", [t.fragments, t.cart_hash, e]), c()) : window.location = e.attr("href")
                },
                error: function() {
                    window.location = e.attr("href")
                }
            })
        }), l.on("change", ".qty", function() {
            var t = u(this);
            void 0 !== s && clearTimeout(s), s = setTimeout(function() {
                e(t.attr("name"), t.val())
            }, 500)
        }), l.on("submit", ".form-fly-cart-order-notes", function() {
            var t = u(this).find("button[type=submit]"),
                e = u(this).find('textarea[name="order_comments"]').val();
            return u.ajax({
                type: "POST",
                url: $minimog.ajaxurl,
                data: {
                    action: "minimog_save_order_notes",
                    order_notes: e
                },
                dataType: "json",
                success: function(t) {
                    t.data && t.data.fragments && u.each(t.data.fragments, function(t, e) {
                        u(t).replaceWith(e)
                    }), u('textarea[name="order_comments"]').val(e)
                },
                beforeSend: function() {
                    p.setElementHandling(t)
                },
                complete: function() {
                    p.unsetElementHandling(t), i()
                }
            }), !1
        }), u(document.body).on("removed_coupon applied_coupon", d), u(document).on("change", "select.shipping_method, :input[name^=shipping_method]", function() {
            var t = {},
                e = (u(this).closest(".woocommerce-shipping-methods").find("select.shipping_method, :input[name^=shipping_method][type=radio]:checked, :input[name^=shipping_method][type=hidden]").each(function() {
                    t[u(this).data("index")] = u(this).val()
                }), {
                    security: $minimog.nonce,
                    shipping_method: t,
                    action: "minimog_update_shipping_method"
                });
            u.ajax({
                type: "POST",
                url: $minimog.ajaxurl,
                data: e,
                dataType: "json",
                success: function(t) {
                    t.data && t.data.fragments && u.each(t.data.fragments, function(t, e) {
                        u(t).replaceWith(e)
                    })
                },
                beforeSend: function() {
                    n() ? r() : p.setBodyHandling()
                },
                complete: function() {
                    n() ? c() : p.setBodyCompleted(), u(document.body).trigger("updated_shipping_method")
                }
            })
        }), u(document).on("submit", "form.fly-cart-shipping-calculator", function(t) {
            t.preventDefault(), i(), r(), t = u(t.currentTarget), u("<input />").attr("type", "hidden").attr("name", "action").attr("value", "minimog_calculate_shipping").appendTo(t), u.ajax({
                type: t.attr("method"),
                url: $minimog.ajaxurl,
                data: t.serialize(),
                dataType: "json",
                success: function(t) {
                    t.data.fragments && u.each(t.data.fragments, function(t, e) {
                        u(t).empty(), "" !== e && (e = u(u.parseHTML(e)), u(t).html(e.html()))
                    })
                },
                complete: function() {
                    c()
                }
            })
        })
    }), u(window).on("load", g)
}(jQuery);